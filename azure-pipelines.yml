# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- second

pool:
  name: Default

variables:
  Major: '1'
  Minor: '0'
  Patch: $[counter(variables['Minor'], 1)]
  VER: '$(Major).$(Minor).$(Patch)'
  NUGET: $(Build.SourceBranch).$(VER)
  isSecond: $[eq(variables['Build.SourceBranch'], 'refs/heads/second')]
  isMain:  $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

stages:
- stage: first
  condition: eq(variables.isMain, true)
  jobs:
  - job: first
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
      displayName: build

    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        versioningScheme: 'byEnvVar'
        versionEnvVar: 'VER'
      displayName: pack

    - task: DotNetCoreCLI@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'bc6b2af7-25bf-4811-96bf-46aae8e070ca/e1d1c81f-4ed1-4254-a6d9-cc69b4f33ae8'
      displayName: push artifact
    
- stage: second
  condition: eq(variables.isSecond, true)
  jobs:
  - job: second
    steps:
    - task: NuGetCommand@2
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        versioningScheme: 'byEnvVar'
        versionEnvVar: 'NUGET'
      displayName: pack nuget


    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'bc6b2af7-25bf-4811-96bf-46aae8e070ca/e1d1c81f-4ed1-4254-a6d9-cc69b4f33ae8'
      displayName: push nuget
